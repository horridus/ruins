<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

	<!-- ####### STATIC authentication ####### -->
	
	<bean id="staticAuthProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="staticAuthUserDetailsService"/>
		<!-- here we configure MD5 encryption of the passwords --> 
		<!-- Remark the following line to use plain text passwords, NOT RECOMMENDED! --> 
		<property name="passwordEncoder" ref="authPasswordEncoderMD5"/>

		<!-- optional if you intent to use EhCache to cache user repository -->
		<!-- <property name="userCache" ref="authUserCache"/> -->
	</bean>

	<bean id="staticAuthUserDetailsService" class="org.springframework.security.core.userdetails.memory.InMemoryDaoImpl">
		<property name="userMap">
			<!-- format: username=password,grantedAuthority[,grantedAuthority][,enabled|disabled] -->
			<value>
					guest=084e0343a0486ff05530df6c705c8bb4, ROLE_ADMIN_ROOT, enabled
					user=ee11cbb19052e40b07aac0ca060c23ee, ROLE_EXTERNAL, ROLE_ADMIN_ROOT, enabled
					root=63a9f0ea7bb98050796b649e85481845, ROLE_ADMIN_ROOT, enabled
					admin=21232f297a57a5a743894a0e4a801fc3, ROLE_ADMIN_MAINTENANCE, enabled
					alex=b7f490d7a94fd0a6f2e29f8fd1841a54, ROLE_ADMIN_ROOT, ROLE_ADMIN_MAINTENANCE, enabled
					marta=bc15ab9a9d02322acb686e8c5b057993, ROLE_ADMIN_ROOT, ROLE_ADMIN_MAINTENANCE, enabled
			</value>
		</property>	
	</bean>

	<!-- ####### optional password hashing with MD5 hashs ####### -->
	
	<bean id="authPasswordEncoderMD5" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>

	<!-- ####### initialization of authentication provider ####### -->
	
	<bean id="authManager" class="org.springframework.security.authentication.ProviderManager">
		<property name="providers">
			<list>
				<ref local="staticAuthProvider"/>
			</list>
		</property>
	</bean>

	<!-- ####### Setting up the global CacheManager ####### -->

	<!-- RAM Memory session -->
	<bean id="sessionManager" class="org.jwebsocket.session.SessionManager" 
			init-method="initialize" destroy-method="shutdown">
		<property name="storageProvider" ref="storageProviderMemory"/>
		<property name="reconnectionManager">
			<bean class="org.jwebsocket.session.SessionReconnectionManager" 
			init-method="initialize" destroy-method="shutdown">
				<property name="cacheStorageName" value="__reconnection_index_ns__" />
				<property name="sessionExpirationTime" value="60" />
				<property name="trashStorageName" value="__session_ids_trash_storage_ns__" />
				<property name="storageProvider" ref="storageProviderMemory"/>
				<property name="cacheStorageProvider" ref="cacheStorageProviderMemory"/>
			</bean>
		</property>
	</bean>
	
	<!--  Memory Storage provider (here for the sessions) -->
    <bean id="storageProviderMemory" class="org.jwebsocket.storage.memory.MemoryStorageProvider">
    </bean>
    <!--  Memory Storage provider (here for the sessions) -->
    <bean id="cacheStorageProviderMemory" class="org.jwebsocket.cachestorage.memory.MemoryCacheStorageProvider">
    </bean>

</beans>
