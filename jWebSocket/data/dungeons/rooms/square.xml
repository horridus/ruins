<?xml version="1.0" encoding="UTF-8"?>
<rooms>
	<room id="square">
	    <generator>
	        <![CDATA[
	        var xOffset = _digger_.randomI(0, _digger_.cellSize()/2);
	        var yOffset = _digger_.randomI(0, _digger_.cellSize()/2);
	        var size = _digger_.randomI(4, _digger_.cellSize() - Math.max(xOffset, yOffset));
	        
	        //south and north walls
	        for (var x = xOffset; x < xOffset + size; x++) {
	            _digger_.digCellTile(x, yOffset, _tile_DOLOMITE);
	            _digger_.digCellTile(x, yOffset + size-1, _tile_DOLOMITE);
	        }
	        
	        //south and north walls
	        for (var y = yOffset; y < yOffset + size; y++) {
	            _digger_.digCellTile(xOffset, y, _tile_DOLOMITE);
	            _digger_.digCellTile(xOffset + size-1, y, _tile_DOLOMITE);
	        }
	        
	        //floor
	        for (var y = yOffset + 1; y < yOffset + size-1; y++) {
	            for (var x = xOffset + 1; x < xOffset + size-1; x++) {
	                _digger_.digCellTile(x, y, _tile_DOLOMITE_FLOOR);
	            }
	        }
	        
	        var entrancesList = _digger_.entrances();            
	        var eSize = entrancesList.size();
	        
	        if (eSize > 0) {
	            for (var n = 0; n < eSize; n++) {
	                var ePoint = entrancesList.get(n);
	                var start = _digger_.randomI(1, size - 1); //don't select room's corners
	                
	                var side = _digger_.randomI(0, 4);
	                switch (side) {
	                case 0:
	                     _digger_.digCorridor(xOffset, yOffset + start, ePoint.x, ePoint.y, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
	                    break;
	                case 1:
	                    _digger_.digCorridor(xOffset + start, yOffset, ePoint.x, ePoint.y, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
	                    break;
	                case 2:
	                    _digger_.digCorridor(xOffset + size - 1, yOffset + start, ePoint.x, ePoint.y, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
	                    break;
	                case 3:
	                    _digger_.digCorridor(xOffset + start, yOffset + size - 1, ePoint.x, ePoint.y, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
	                    break;
	                }
	            }
	        }
	        else {
	            //add entrances
	            var entrances = _digger_.randomI(0, 4);
	            switch (entrances) {
	            case 0:
	               var start = _digger_.randomI(1, size - 1); //don't select room's corners
	               var goal = _digger_.randomI(0, _digger_.cellSize());
	               _digger_.digCorridor(xOffset, yOffset + start, 0, goal, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
	               break;
	            case 1:
	               var start = _digger_.randomI(1, size - 1); //don't select room's corners
	               var goal = _digger_.randomI(0, _digger_.cellSize());
	               _digger_.digCorridor(xOffset, yOffset + start, 0, goal, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
	               
	               start = _digger_.randomI(1, size - 1); //don't select room's corners
	               goal = _digger_.randomI(0, _digger_.cellSize());
	               _digger_.digCorridor(xOffset + start, yOffset, goal, 0, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
	               break;
	            case 2:
	               var start = _digger_.randomI(1, size - 1); //don't select room's corners
	               var goal = _digger_.randomI(0, _digger_.cellSize());
	               _digger_.digCorridor(xOffset, yOffset + start, 0, goal, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
	               
	               start = _digger_.randomI(1, size - 1); //don't select room's corners
	               goal = _digger_.randomI(0, _digger_.cellSize());
	               _digger_.digCorridor(xOffset + start, yOffset, goal, 0, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
	               
	               start = _digger_.randomI(1, size - 1); //don't select room's corners
	               goal = _digger_.randomI(0, _digger_.cellSize());
	               _digger_.digCorridor(xOffset + size - 1, yOffset + start, _digger_.cellSize() - 1, goal, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
	               break;
	            case 3:
	                var start = _digger_.randomI(1, size - 1); //don't select room's corners
	               var goal = _digger_.randomI(0, _digger_.cellSize());
	               _digger_.digCorridor(xOffset, yOffset + start, 0, goal, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
	               
	               start = _digger_.randomI(1, size - 1); //don't select room's corners
	               goal = _digger_.randomI(0, _digger_.cellSize());
	               _digger_.digCorridor(xOffset + start, yOffset, goal, 0, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
	               
	               start = _digger_.randomI(1, size - 1); //don't select room's corners
	               goal = _digger_.randomI(0, _digger_.cellSize());
	               _digger_.digCorridor(xOffset + size - 1, yOffset + start, _digger_.cellSize() - 1, goal, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
	            
	               start = _digger_.randomI(1, size - 1); //don't select room's corners
	               goal = _digger_.randomI(0, _digger_.cellSize());
	               _digger_.digCorridor(xOffset + start, yOffset + size - 1, goal, _digger_.cellSize() - 1, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
	               break;
	            }
	        }
	        ]]>
	    </generator>
	</room>
</rooms>