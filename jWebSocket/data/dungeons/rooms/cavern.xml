<?xml version="1.0" encoding="UTF-8"?>
<rooms>
	<room id="cavern">
	    <generator>
	    <![CDATA[
	    function isFloor(probability) {
	        var randomProb = _digger_.randomI(0, 100);
	        if (randomProb < probability)
	            return false;
	        else
	            return true;
	    };
	    
	    function generation(size, r1Cutoff, r2Cutoff, helperGrid, secondPass) {
	        for (var yi = 1; yi < size - 1; yi++) {
	            for (var xi = 1; xi < size - 1; xi++) {
	            
	                var adjcount_r1 = 0;
	                var adjcount_r2 = 0;
	    
	                for (var ii = -1; ii <= 1; ii++) {
	                    for (var jj = -1; jj <= 1; jj++) {
	                        var material = _digger_.cellTileMaterial(xi+jj, yi+ii);
	                        if (material != 1)
	                             adjcount_r1++;
	                    }
	                }
	                
	                for (var ii = yi-2; ii <= yi+2; ii++) {
	                    for (var jj = xi-2; jj <= xi+2; jj++) {
	                        if (Math.abs(ii-yi) == 2 && Math.abs(jj-xi) == 2)
	                            continue;
	                        
	                        if (ii < 0 || jj < 0 || ii >= size || jj >= size)
	                            continue;
	                    
	                        var material = _digger_.cellTileMaterial(jj, ii);
	                        if (material != 1)
	                             adjcount_r2++;
	                    }
	                }
	                
	                if (!secondPass) {
	                    if(adjcount_r1 >= r1Cutoff || adjcount_r2 <= r2Cutoff)
	                        helperGrid[xi][yi] =  0; 
	                    else
	                        helperGrid[xi][yi] =  1;
	               }
	               else {
	                   if(adjcount_r1 >= r1Cutoff)
	                        helperGrid[xi][yi] =  0; 
	                    else
	                        helperGrid[xi][yi] =  1;
	               }
	            }
	        }
	        
	        for (var yi = 1; yi < size - 1; yi++) {
	            for (var xi = 1; xi < size - 1; xi++) {
	                _digger_.digCellTile(xi, yi, helperGrid[xi][yi]);
	            }
	        }
	    }
	    
	    var size = _digger_.randomI(3, _digger_.cellSize());
	    
	    var helperGrid = new Array();
	    for (var x = 0; x < size; x++) {
	        helperGrid[x] = new Array();
	        for (var y = 0; y < size; y++) {
	            //init helper grid
	            helperGrid[x][y] = 0;
	         
	            //init cell map
	            if (isFloor(40))
	                _digger_.digCellTile(x, y, _tile_DOLOMITE_FLOOR);
	        }
	    }
	    
	    for (var i = 0; i < size; i++) {
	       _digger_.digCellTile(i, 0, 0);
	       _digger_.digCellTile(0, i, 0);
	       _digger_.digCellTile(i, size-1, 0);
	       _digger_.digCellTile(size-1, i, 0);
	    }
	    
	    for (var i = 0; i < 4; i++) {
	        generation(size, 5, 2, helperGrid, false);
	    }
	    
	    for (var i = 0; i < 3; i++) {
	        generation(size, 5, 2, helperGrid, true);
	    }
	    
	    var entrances = _digger_.entrances();
	    var eSize = entrances.size(); 
	    if (eSize > 0) {
	        var goalx = _digger_.randomI(0, _digger_.cellSize());
	        var goaly = _digger_.randomI(0, _digger_.cellSize());
	        var entrance = entrances.get(_digger_.randomI(0, eSize));
	        
	        _digger_.digCorridor(entrance.x, entrance.y, goalx, goaly, _tile_DOLOMITE_FLOOR, _tile_NONE);
	    }
	    
	    ]]>
	    </generator>
	</room>
</rooms>