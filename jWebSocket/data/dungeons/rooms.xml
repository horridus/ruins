<?xml version="1.0" encoding="UTF-8"?>
<rooms>
    <room id="square">
        <generator>
            <![CDATA[
            var xOffset = _digger_.randomI(0, _digger_.cellSize()/2);
            var yOffset = _digger_.randomI(0, _digger_.cellSize()/2);
            var size = _digger_.randomI(4, _digger_.cellSize() - Math.max(xOffset, yOffset));
            
            //south and north walls
            for (var x = xOffset; x < xOffset + size; x++) {
                _digger_.digCellTile(x, yOffset, _tile_DOLOMITE);
                _digger_.digCellTile(x, yOffset + size-1, _tile_DOLOMITE);
            }
            
            //south and north walls
            for (var y = yOffset; y < yOffset + size; y++) {
                _digger_.digCellTile(xOffset, y, _tile_DOLOMITE);
                _digger_.digCellTile(xOffset + size-1, y, _tile_DOLOMITE);
            }
            
            //floor
            for (var y = yOffset + 1; y < yOffset + size-1; y++) {
                for (var x = xOffset + 1; x < xOffset + size-1; x++) {
                    _digger_.digCellTile(x, y, _tile_DOLOMITE_FLOOR);
                }
            }
            
            var entrancesList = _digger_.entrances();            
            var eSize = entrancesList.size();
            
            if (eSize > 0) {
                for (var n = 0; n < eSize; n++) {
                    var ePoint = entrancesList.get(n);
                    var start = _digger_.randomI(1, size - 1); //don't select room's corners
                    
                    var side = _digger_.randomI(0, 4);
                    switch (side) {
                    case 0:
                         _digger_.digCorridor(xOffset, yOffset + start, ePoint.x, ePoint.y, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                        break;
                    case 1:
                        _digger_.digCorridor(xOffset + start, yOffset, ePoint.x, ePoint.y, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                        break;
                    case 2:
                        _digger_.digCorridor(xOffset + size - 1, yOffset + start, ePoint.x, ePoint.y, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                        break;
                    case 3:
                        _digger_.digCorridor(xOffset + start, yOffset + size - 1, ePoint.x, ePoint.y, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                        break;
                    }
                }
            }
            else {
	            //add entrances
	            var entrances = _digger_.randomI(0, 4);
	            switch (entrances) {
	            case 0:
	               var start = _digger_.randomI(1, size - 1); //don't select room's corners
	               var goal = _digger_.randomI(0, _digger_.cellSize());
	               _digger_.digCorridor(xOffset, yOffset + start, 0, goal, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
	               break;
	            case 1:
	               var start = _digger_.randomI(1, size - 1); //don't select room's corners
                   var goal = _digger_.randomI(0, _digger_.cellSize());
                   _digger_.digCorridor(xOffset, yOffset + start, 0, goal, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                   
                   start = _digger_.randomI(1, size - 1); //don't select room's corners
                   goal = _digger_.randomI(0, _digger_.cellSize());
                   _digger_.digCorridor(xOffset + start, yOffset, goal, 0, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                   break;
                case 2:
                   var start = _digger_.randomI(1, size - 1); //don't select room's corners
                   var goal = _digger_.randomI(0, _digger_.cellSize());
                   _digger_.digCorridor(xOffset, yOffset + start, 0, goal, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                   
                   start = _digger_.randomI(1, size - 1); //don't select room's corners
                   goal = _digger_.randomI(0, _digger_.cellSize());
                   _digger_.digCorridor(xOffset + start, yOffset, goal, 0, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                   
                   start = _digger_.randomI(1, size - 1); //don't select room's corners
                   goal = _digger_.randomI(0, _digger_.cellSize());
                   _digger_.digCorridor(xOffset + size - 1, yOffset + start, _digger_.cellSize() - 1, goal, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                   break;
                case 3:
                    var start = _digger_.randomI(1, size - 1); //don't select room's corners
                   var goal = _digger_.randomI(0, _digger_.cellSize());
                   _digger_.digCorridor(xOffset, yOffset + start, 0, goal, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                   
                   start = _digger_.randomI(1, size - 1); //don't select room's corners
                   goal = _digger_.randomI(0, _digger_.cellSize());
                   _digger_.digCorridor(xOffset + start, yOffset, goal, 0, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                   
                   start = _digger_.randomI(1, size - 1); //don't select room's corners
                   goal = _digger_.randomI(0, _digger_.cellSize());
                   _digger_.digCorridor(xOffset + size - 1, yOffset + start, _digger_.cellSize() - 1, goal, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                
                   start = _digger_.randomI(1, size - 1); //don't select room's corners
                   goal = _digger_.randomI(0, _digger_.cellSize());
                   _digger_.digCorridor(xOffset + start, yOffset + size - 1, goal, _digger_.cellSize() - 1, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                   break;
	            }
	        }
            ]]>
        </generator>
    </room>
    <room id="cavern">
        <generator>
        <![CDATA[
        function isFloor(probability) {
            var randomProb = _digger_.randomI(0, 100);
            if (randomProb < probability)
                return false;
            else
                return true;
        };
        
        function generation(size, r1Cutoff, r2Cutoff, helperGrid, secondPass) {
            for (var yi = 1; yi < size - 1; yi++) {
                for (var xi = 1; xi < size - 1; xi++) {
                
                    var adjcount_r1 = 0;
                    var adjcount_r2 = 0;
        
                    for (var ii = -1; ii <= 1; ii++) {
                        for (var jj = -1; jj <= 1; jj++) {
                            var material = _digger_.cellTileMaterial(xi+jj, yi+ii);
                            if (material != 1)
                                 adjcount_r1++;
                        }
                    }
                    
                    for (var ii = yi-2; ii <= yi+2; ii++) {
                        for (var jj = xi-2; jj <= xi+2; jj++) {
                            if (Math.abs(ii-yi) == 2 && Math.abs(jj-xi) == 2)
                                continue;
                            
                            if (ii < 0 || jj < 0 || ii >= size || jj >= size)
                                continue;
                        
                            var material = _digger_.cellTileMaterial(jj, ii);
                            if (material != 1)
                                 adjcount_r2++;
                        }
                    }
                    
                    if (!secondPass) {
                        if(adjcount_r1 >= r1Cutoff || adjcount_r2 <= r2Cutoff)
                            helperGrid[xi][yi] =  0; 
                        else
                            helperGrid[xi][yi] =  1;
                   }
                   else {
                       if(adjcount_r1 >= r1Cutoff)
                            helperGrid[xi][yi] =  0; 
                        else
                            helperGrid[xi][yi] =  1;
                   }
                }
            }
            
            for (var yi = 1; yi < size - 1; yi++) {
                for (var xi = 1; xi < size - 1; xi++) {
                    _digger_.digCellTile(xi, yi, helperGrid[xi][yi]);
                }
            }
        }
        
        var size = _digger_.randomI(3, _digger_.cellSize());
        
        var helperGrid = new Array();
        for (var x = 0; x < size; x++) {
            helperGrid[x] = new Array();
            for (var y = 0; y < size; y++) {
                //init helper grid
                helperGrid[x][y] = 0;
             
                //init cell map
                if (isFloor(40))
                    _digger_.digCellTile(x, y, _tile_DOLOMITE_FLOOR);
            }
        }
        
        for (var i = 0; i < size; i++) {
           _digger_.digCellTile(i, 0, 0);
           _digger_.digCellTile(0, i, 0);
           _digger_.digCellTile(i, size-1, 0);
           _digger_.digCellTile(size-1, i, 0);
        }
        
        for (var i = 0; i < 4; i++) {
            generation(size, 5, 2, helperGrid, false);
        }
        
        for (var i = 0; i < 3; i++) {
            generation(size, 5, 2, helperGrid, true);
        }
        
        var entrances = _digger_.entrances();
        var eSize = entrances.size(); 
        if (eSize > 0) {
            var goalx = _digger_.randomI(0, _digger_.cellSize());
            var goaly = _digger_.randomI(0, _digger_.cellSize());
            var entrance = entrances.get(_digger_.randomI(0, eSize));
            
            _digger_.digCorridor(entrance.x, entrance.y, goalx, goaly, _tile_DOLOMITE_FLOOR, _tile_NONE);
        }
        
        ]]>
        </generator>
    </room>
    <room id="multiple">
        <generator>
        <![CDATA[
          for (var n = 0; n < 3; n++) {        
	        var xOffset = _digger_.randomI(0, _digger_.cellSize()/2);
	        var yOffset = _digger_.randomI(0, _digger_.cellSize()/2);
	        var size = _digger_.randomI(4, _digger_.cellSize() - Math.max(xOffset, yOffset));
	        
	        //south and north walls
	        for (var x = xOffset; x < xOffset + size; x++) {
	            _digger_.digCellTile(x, yOffset, _tile_DOLOMITE);
	            _digger_.digCellTile(x, yOffset + size-1, _tile_DOLOMITE);
	        }
	        
	        //south and north walls
	        for (var y = yOffset; y < yOffset + size; y++) {
	            _digger_.digCellTile(xOffset, y, _tile_DOLOMITE);
	            _digger_.digCellTile(xOffset + size-1, y, _tile_DOLOMITE);
	        }
	        
	        //floor
	        for (var y = yOffset + 1; y < yOffset + size-1; y++) {
	            for (var x = xOffset + 1; x < xOffset + size-1; x++) {
	                _digger_.digCellTile(x, y, _tile_DOLOMITE_FLOOR);
	            }
	        }
	        
	         var entrancesList = _digger_.entrances();            
            var eSize = entrancesList.size();
            
            if (eSize > 0) {
                for (var n = 0; n < eSize; n++) {
                    var ePoint = entrancesList.get(n);
                    var start = _digger_.randomI(1, size - 1); //don't select room's corners
                    
                    var side = _digger_.randomI(0, 4);
                    switch (side) {
                    case 0:
                         _digger_.digCorridor(xOffset, yOffset + start, ePoint.x, ePoint.y, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                        break;
                    case 1:
                        _digger_.digCorridor(xOffset + start, yOffset, ePoint.x, ePoint.y, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                        break;
                    case 2:
                        _digger_.digCorridor(xOffset + size - 1, yOffset + start, ePoint.x, ePoint.y, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                        break;
                    case 3:
                        _digger_.digCorridor(xOffset + start, yOffset + size - 1, ePoint.x, ePoint.y, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                        break;
                    }
                }
            }
            else {
                //add entrances
                var entrances = _digger_.randomI(0, 4);
                switch (entrances) {
                case 0:
                   var start = _digger_.randomI(1, size - 1); //don't select room's corners
                   var goal = _digger_.randomI(0, _digger_.cellSize());
                   _digger_.digCorridor(xOffset, yOffset + start, 0, goal, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                   break;
                case 1:
                   var start = _digger_.randomI(1, size - 1); //don't select room's corners
                   var goal = _digger_.randomI(0, _digger_.cellSize());
                   _digger_.digCorridor(xOffset, yOffset + start, 0, goal, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                   
                   start = _digger_.randomI(1, size - 1); //don't select room's corners
                   goal = _digger_.randomI(0, _digger_.cellSize());
                   _digger_.digCorridor(xOffset + start, yOffset, goal, 0, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                   break;
                case 2:
                   var start = _digger_.randomI(1, size - 1); //don't select room's corners
                   var goal = _digger_.randomI(0, _digger_.cellSize());
                   _digger_.digCorridor(xOffset, yOffset + start, 0, goal, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                   
                   start = _digger_.randomI(1, size - 1); //don't select room's corners
                   goal = _digger_.randomI(0, _digger_.cellSize());
                   _digger_.digCorridor(xOffset + start, yOffset, goal, 0, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                   
                   start = _digger_.randomI(1, size - 1); //don't select room's corners
                   goal = _digger_.randomI(0, _digger_.cellSize());
                   _digger_.digCorridor(xOffset + size - 1, yOffset + start, _digger_.cellSize() - 1, goal, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                   break;
                case 3:
                    var start = _digger_.randomI(1, size - 1); //don't select room's corners
                   var goal = _digger_.randomI(0, _digger_.cellSize());
                   _digger_.digCorridor(xOffset, yOffset + start, 0, goal, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                   
                   start = _digger_.randomI(1, size - 1); //don't select room's corners
                   goal = _digger_.randomI(0, _digger_.cellSize());
                   _digger_.digCorridor(xOffset + start, yOffset, goal, 0, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                   
                   start = _digger_.randomI(1, size - 1); //don't select room's corners
                   goal = _digger_.randomI(0, _digger_.cellSize());
                   _digger_.digCorridor(xOffset + size - 1, yOffset + start, _digger_.cellSize() - 1, goal, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                
                   start = _digger_.randomI(1, size - 1); //don't select room's corners
                   goal = _digger_.randomI(0, _digger_.cellSize());
                   _digger_.digCorridor(xOffset + start, yOffset + size - 1, goal, _digger_.cellSize() - 1, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
                   break;
                }
            }
		  }
        ]]>
        </generator>
    </room>
    <room id="corridors">
        <generator>
        <![CDATA[
            var entrancesList = _digger_.getNorthCellEntrances();
            var oppositeEntrancesList = _digger_.getNotNorthCellEntrances();
            
            if (entrancesList.size() == 0) {
                entrancesList = _digger_.getWestCellEntrances();
                var oppositeEntrancesList = _digger_.getNotWestCellEntrances();
            }
            
            var eSize = entrancesList.size();
            
            if (eSize > 0) {
               var oeSize = oppositeEntrancesList.size();
               if (oeSize > 0) {
                       var entrance = entrancesList.get(_digger_.randomI(0, eSize));
                       var oppositeEntrance = oppositeEntrancesList.get(_digger_.randomI(0, oeSize));
                       _digger_.digCorridor(entrance.x, entrance.y, oppositeEntrance.x, oppositeEntrance.y, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
               }
            }
        ]]>
        </generator>
    </room>
    <room id="bigroom00">
        <generator>
        <![CDATA[
            var size = _digger_.cellSize();
            for (var y = 1; y < size; y++) {
                for (var x = 1; x < size; x++) {
                    _digger_.digCellTile(x, y, _tile_DOLOMITE_FLOOR);
                }
            }
            
            for (var n = 1; n < size; n++) {
                _digger_.digCellTile(1, n, _tile_DOLOMITE);
                _digger_.digCellTile(n, 1, _tile_DOLOMITE);
            }
        ]]>
        </generator>
    </room>
    <room id="bigroom10">
        <generator>
        <![CDATA[
            var size = _digger_.cellSize();
            for (var y = 1; y < size; y++) {
                for (var x = 0; x < size - 1; x++) {
                    _digger_.digCellTile(x, y, _tile_DOLOMITE_FLOOR);
                }
            }
            
            for (var n = 0; n < size - 1; n++) {
                _digger_.digCellTile(size - 2, n + 1, _tile_DOLOMITE);
                _digger_.digCellTile(n, 1, _tile_DOLOMITE);
            }
        ]]>
        </generator>
    </room>
    <room id="bigroom01">
        <generator>
        <![CDATA[
            var size = _digger_.cellSize();
            for (var y = 0; y < size - 1; y++) {
                for (var x = 1; x < size; x++) {
                    _digger_.digCellTile(x, y, _tile_DOLOMITE_FLOOR);
                }
            }
            
            for (var n = 0; n < size - 1; n++) {
                _digger_.digCellTile(1, n, _tile_DOLOMITE);
                _digger_.digCellTile(n + 1, size - 2, _tile_DOLOMITE);
            }
            
            _digger_.digCorridor(size - 2, size - 2, size - 2, size - 1, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
        ]]>
        </generator>
    </room>
    <room id="bigroom11">
        <generator>
        <![CDATA[
            var size = _digger_.cellSize();
            for (var y = 0; y < size - 1; y++) {
                for (var x = 0; x < size - 1; x++) {
                    _digger_.digCellTile(x, y, _tile_DOLOMITE_FLOOR);
                }
            }
            
            for (var n = 0; n < size - 1; n++) {
                _digger_.digCellTile(size - 2, n, _tile_DOLOMITE);
                _digger_.digCellTile(n, size - 2, _tile_DOLOMITE);
            }
            
            _digger_.digCorridor(1, size - 2, 1, size - 1, _tile_DOLOMITE_FLOOR, _tile_DOLOMITE);
        ]]>
        </generator>
    </room>
</rooms>